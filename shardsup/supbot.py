import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from dotenv import load_dotenv
import os
load_dotenv()
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv('BOT_TOKEN')

# ID —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã —Å –∞–¥–º–∏–Ω–∞–º–∏ (–≥–¥–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è —Ç–µ–º—ã)
ADMIN_GROUP_ID = int(os.getenv('ADMIN_GROUP_ID'))

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å: user_id -> message_thread_id
user_threads = {}


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ /start
@dp.message(F.text == "/start")
async def start_message(message: Message):
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Shard VPN Support Bot*!\n\n"
        "üì© –û—Å—Ç–∞–≤—å—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ—é –∑–∞—è–≤–∫—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å.\n"
        "‚úÖ –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )
    await message.answer(welcome_text, parse_mode="Markdown")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@dp.message(F.chat.type == "private")
async def user_message(message: Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ–º–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_threads:
        topic = await bot.create_forum_topic(
            chat_id=ADMIN_GROUP_ID,
            name=f"–ó–∞—è–≤–∫–∞ –æ—Ç {message.from_user.full_name} ({user_id})"
        )
        user_threads[user_id] = topic.message_thread_id

    thread_id = user_threads[user_id]

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    if message.text:
        await bot.send_message(ADMIN_GROUP_ID, message.text, message_thread_id=thread_id)
    elif message.photo:
        await bot.send_photo(ADMIN_GROUP_ID, message.photo[-1].file_id, caption=message.caption or "", message_thread_id=thread_id)
    elif message.document:
        await bot.send_document(ADMIN_GROUP_ID, message.document.file_id, caption=message.caption or "", message_thread_id=thread_id)
    elif message.video:
        await bot.send_video(ADMIN_GROUP_ID, message.video.file_id, caption=message.caption or "", message_thread_id=thread_id)
    elif message.voice:
        await bot.send_voice(ADMIN_GROUP_ID, message.voice.file_id, caption=message.caption or "", message_thread_id=thread_id)
    elif message.sticker:
        await bot.send_sticker(ADMIN_GROUP_ID, message.sticker.file_id, message_thread_id=thread_id)


# –û—Ç–≤–µ—Ç—ã –∞–¥–º–∏–Ω–æ–≤
@dp.message(F.chat.id == ADMIN_GROUP_ID)
async def admin_message(message: Message):
    if message.message_thread_id:
        for user_id, thread_id in user_threads.items():
            if thread_id == message.message_thread_id:
                if message.text:
                    await bot.send_message(user_id, message.text)
                elif message.photo:
                    await bot.send_photo(user_id, message.photo[-1].file_id, caption=message.caption or "")
                elif message.document:
                    await bot.send_document(user_id, message.document.file_id, caption=message.caption or "")
                elif message.video:
                    await bot.send_video(user_id, message.video.file_id, caption=message.caption or "")
                elif message.voice:
                    await bot.send_voice(user_id, message.voice.file_id, caption=message.caption or "")
                elif message.sticker:
                    await bot.send_sticker(user_id, message.sticker.file_id)
                break


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
